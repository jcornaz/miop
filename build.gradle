buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    }
}

allprojects {
    group 'com.github.jcornaz.miop'
    version '0.0.1-SNAPSHOT'

    apply plugin: 'org.jetbrains.dokka'

    repositories {
        mavenCentral()
        jcenter()
    }
}

project(':miop-common') {
    apply plugin: 'kotlin-platform-common'

    kotlin.experimental.coroutines 'enable'

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-common"
        compile "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$coroutines_version"

        testCompile "org.jetbrains.kotlin:kotlin-test-annotations-common"
        testCompile "org.jetbrains.kotlin:kotlin-test-common"
    }
}

project(':miop-jvm') {
    apply plugin: 'kotlin-platform-jvm'

    kotlin.experimental.coroutines 'enable'

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.kotlin.srcDirs
    }

    task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
        outputFormat = "javadoc"
        outputDirectory = "$buildDir/dokkaJavadoc"
    }

    task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
        from dokkaJavadoc.outputDirectory
        classifier = 'javadoc'
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib"
        compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

        expectedBy project(":miop-common")

        testCompile "org.jetbrains.kotlin:kotlin-test-junit"
        testCompile "org.jetbrains.kotlin:kotlin-test"
    }
}
